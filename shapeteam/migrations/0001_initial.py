# Generated by Django 5.0.2 on 2024-09-16 02:21

import django.db.models.deletion
import django.utils.timezone
import shapeteam.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='name', max_length=30)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=shapeteam.models.upload_thumbnail)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female'), (3, 'other')])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', shapeteam.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_reps', models.IntegerField()),
                ('default_sets', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('location', models.CharField(default=' ', max_length=255)),
            ],
            options={
                'verbose_name': 'Gym',
                'verbose_name_plural': 'Gyms',
            },
        ),
        migrations.CreateModel(
            name='NameExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(default='description', max_length=1000, null=True)),
                ('muscle_group', models.CharField(default='muscle_group', max_length=50)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=shapeteam.models.upload_photos)),
            ],
        ),
        migrations.CreateModel(
            name='DigitalInfluencer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialities', models.TextField()),
                ('experience', models.TextField()),
                ('certifications', models.TextField()),
            ],
            options={
                'verbose_name': 'Digital Influencer',
                'verbose_name_plural': 'Digital Influencers',
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_connections', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_connections', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DayTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(default='monday', max_length=120)),
                ('exercises', models.ManyToManyField(to='shapeteam.exercise')),
            ],
            options={
                'verbose_name': 'Day Training',
                'verbose_name_plural': 'Day Trainings',
            },
        ),
        migrations.CreateModel(
            name='DayExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reps', models.IntegerField()),
                ('sets', models.IntegerField()),
                ('duration', models.DurationField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shapeteam.exercise')),
            ],
            options={
                'verbose_name': 'Day Exercise',
                'verbose_name_plural': 'Day Exercises',
            },
        ),
        migrations.CreateModel(
            name='ExerciseRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('update', models.DateTimeField(auto_now=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shapeteam.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exercise Ranking',
                'verbose_name_plural': 'Exercise Rankings',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='shapeteam.connection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='exercise',
            name='name_exe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='shapeteam.nameexercise'),
        ),
        migrations.CreateModel(
            name='WeekRoutine',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('friday', models.ManyToManyField(blank=True, related_name='friday_routine', to='shapeteam.daytraining')),
                ('monday', models.ManyToManyField(blank=True, related_name='monday_routine', to='shapeteam.daytraining')),
                ('saturday', models.ManyToManyField(blank=True, related_name='saturday_routine', to='shapeteam.daytraining')),
                ('sunday', models.ManyToManyField(blank=True, related_name='sunday_routine', to='shapeteam.daytraining')),
                ('thursday', models.ManyToManyField(blank=True, related_name='thursday_routine', to='shapeteam.daytraining')),
                ('tuesday', models.ManyToManyField(blank=True, related_name='tuesday_routine', to='shapeteam.daytraining')),
                ('wednesday', models.ManyToManyField(blank=True, related_name='wednesday_routine', to='shapeteam.daytraining')),
            ],
            options={
                'verbose_name': 'Week Routine',
                'verbose_name_plural': 'Week Routines',
            },
        ),
        migrations.AddField(
            model_name='daytraining',
            name='routine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shapeteam.weekroutine'),
        ),
    ]
